/* 1) Pull in your v maps and utilities */
@use "./assets/styles/common-classes.scss";
@use "./assets/styles/mixinn.scss" as mix;
@use "./assets/styles/variables.scss" as v;
@import "prismjs/themes/prism-okaidia.css";
@import "prismjs/plugins/line-numbers/prism-line-numbers.css";

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  display: flex;
  flex-direction: column;
  color: v.$color-text-main;
  cursor: default;
  font-family: Roboto, "Inter", sans-serif;
  background-color: v.$color-bg-main;
  position: relative;
}

* {
  margin: 0;
  padding: 0;
  outline: none;
  box-sizing: border-box !important;
  letter-spacing: 0px;
  font-family: "Inter", sans-serif;
}

html {
  scroll-behavior: smooth;
  overflow-x: hidden;
}

h1 {
  font-size: 4rem;
  text-wrap: balance;
  line-height: 4rem * 1.2;
  letter-spacing: -0.01em;
}

h2 {
  font-size: v.$font-xsl;
  line-height: v.$font-xsl * v.$line-height-s;
  font-weight: 600;
  position: relative;
  color: v.$primary-500;
}

h3 {
  font-size: 1.75rem;
  line-height: 1.75rem * 1.6;
  font-weight: 600;
}

.input-fill-default {
  @extend .input-fill;
  background: v.$color-bg-secondary;
  border-radius: 12px;
  height: 100%;
  color: v.$color-text-main;
  font-size: v.$font-s;
  padding: 10px 14px;
  height: 48px;
  position: relative;

  &.ng-invalid.ng-touched:not(:read-only):not(:disabled),
  &.mat-datepicker-input.ng-invalid.ng-touched:not(:read-only):not(:disabled) {
    border-color: v.$app-red;
  }
}

.input-fill-default:hover {
  border: 1px solid v.$primary-800;
}

.input-fill,
.custom-text-area-fill,
.select-fill-input {
  border: none;
  // border-bottom: 1px solid v.$primary-500;
  border: 1px solid v.$color-text-main;
  background: transparent;
  // padding: 14px 14px 14px 0;
  padding: 14px;
  width: 100%;
  color: v.$color-text-main;

  &.mb {
    margin-bottom: 23px;
  }

  &:has(.not-match) {
    padding-bottom: 23px;

    &.mb {
      margin-bottom: 0;
    }
  }

  &:read-only {
    cursor: default;
  }

  &[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }

  &[type="number"] {
    -moz-appearance: textfield;
    appearance: textfield;
  }

  &::-webkit-input-placeholder {
    color: v.$off-white-normal;
  }

  &:-moz-placeholder {
    color: v.$off-white-normal;
  }

  &:not(:read-only, :disabled) {
    &:focus {
      border-color: v.$primary-700;
      border-width: 2px;
    }

    &.ng-invalid.ng-touched {
      border-color: v.$app-red;
    }
  }
}

// ANIMATIONS

// Base state: hidden and shifted down
.animated {
  opacity: 0; // fully transparent
  transform: translateY(40px); // moved down 20px
  transition: opacity 0.6s ease-out,
    // fade in over 0.6s
    transform 0.6s ease-out; // slide up over 0.6s
}

// “in-view” state: when the directive adds this class
.in-view {
  opacity: 1; // fully opaque
  transform: translateY(0); // back to original position
}
